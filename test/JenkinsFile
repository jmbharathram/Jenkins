pipeline {
    agent {
        docker {
            image 'jmbharathram/my-jenkins-maven-docker-image:latest'
            args '--user jenkins -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'git@github.com:jmbharathram/SampleJavaApps.git',
                    branch: 'main',
                    credentialsId: 'git-ssh-cred'
            }
        }
        stage('Build and Test') {
            steps {
               sh 'ls -ltr'
               sh 'hostname'
               sh 'cd SpringAPI && mvn clean package'
            }
        }
        stage('Build and Push Docker Image') {
            environment {
              DOCKER_IMAGE = "jmbharathram/springapi:${BUILD_NUMBER}"
              REGISTRY_CREDENTIALS = credentials('docker-secret')
            }
            steps {
              script {
                  sh 'cd SpringAPI && docker build -t ${DOCKER_IMAGE} .'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/', "docker-secret") {
                      dockerImage.push()
                  }
              }
            }
        }
        stage('Cleanup') {
            steps {
               sh 'cd SpringAPI && rm -rf target'
            }
        }
    }
}
