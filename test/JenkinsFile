pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git url: 'git@github.com:jmbharathram/SampleJavaApps.git',
                    branch: 'main',
                    credentialsId: 'git-ssh-cred'
            }
        }
        stage('Build') {
            steps {
               sh 'ls -ltr'
               sh 'hostname'
               sh 'cd SpringAPI && mvn clean package'
            }
        }
        stage('Build and Push Docker Image') {
            environment {
              DOCKER_IMAGE = "jmbharathram/springapi:${BUILD_NUMBER}"
              REGISTRY_CREDENTIALS = credentials('docker-secret')
            }
            steps {
              script {
                  sh 'cd SpringAPI && docker build -t ${DOCKER_IMAGE} .'
                  def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/', "docker-secret") {
                      dockerImage.push()
                  }
              }
            }
        }
        stage ("Helm Image Update") {
            steps {
                    sh "cd SpringAPI && helm template rel-version-${BUILD_NUMBER} appchart --set image.tag=${BUILD_NUMBER}"
            }
        }
        stage('Commit and Push Changes') {
            steps {
                script {
                    sh """
                    git config --global user.email "abc@example.com"
                    git config --global user.name "abc"
                    git add SpringAPI/appchart
                    git commit -m "Automated commit from Jenkins"
                    git push git@github.com:jmbharathram/SampleJavaApps.git main
                    """
                }
            }
        }
    }
}
